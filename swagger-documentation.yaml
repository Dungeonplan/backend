openapi: 3.0.0
info:
  version: '1.0'
  title: Dungeonplan
  description: Backend API
paths:
  /api/logindiscord:
    get:
      summary: Redirect to Discord SSO
      tags:
        - OAuth2
        - Discord
      responses:
        '307':
          description: Redirect to Discord SSO server.
  /api/logindiscordcallback:
    get:
      summary: Callback address for Discord SSO.
      parameters:
        - in: query
          name: state
          schema:
            type: string
          description: Unique code generated by API
        - in: query
          name: code
          schema:
            type: string
          description: Code from successful login with Discord
      tags:
        - OAuth2
        - Discord
      responses:
        '307':
          description: Redirect to Dungeonplan after successful or failed login
  /api/tokenexchange:
    post:
      summary: Endpoint to transform discord token to jwt token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenexchangeRequest'
      tags:
        - Authorization
        - OAuth2
      responses:
        '401':
          description: Token not found, Token already used, Token was expired
        '200':
          description: New JWT Token was successfully created and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenexchangeResponse'
  /api/logout:
    get:
      summary: Endpoint to invalidate a jwt token.
      security:
        - BearerAuth: []
      tags:
        - Authorization
      responses:
        '401':
          description: No or invalid JWT Token was transmitted
        '200':
          description: Invalidation/Logout was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    TokenexchangeRequest:
      properties:
        token:
          type: string
    TokenexchangeResponse:
      properties:
        token:
          type: string
        user_actions:
          type: array
          items:
            $ref: '#/components/schemas/UserAction'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    UserAction:
      properties:
        id:
          type: integer
        short_name:
          type: string
        description:
          type: string
    Role:
      properties:
        id:
          type: integer
        short_name:
          type: string
        description:
          type: string
        hierarchy:
          type: integer
        system:
          type: boolean
    SuccessResponse:
      properties:
        success:
          type: boolean
        description:
          type: string